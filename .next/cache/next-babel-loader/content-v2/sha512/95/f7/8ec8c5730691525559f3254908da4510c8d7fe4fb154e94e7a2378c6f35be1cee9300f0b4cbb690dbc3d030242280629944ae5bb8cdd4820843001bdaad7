{"ast":null,"code":"import { MongoClient } from 'mongodb'; //API routes folder defines functions that contain server side code\n//next takes this folder and creates apis for us to use\n//never exposed to client all on server\n//these api request are triggered anytime a request is sent to that route\n//path of file, usually called handler\n///api/new-meetup\n\nasync function handler(req, res) {\n  //ensure only POST request to /api/new-meetup is triggered\n  if (req.method === 'POST') {\n    try {\n      const data = req.body;\n      const client = await MongoClient.connect('mongodb+srv://jordan1234:jordan1234@cluster0.otme2.mongodb.net/meetups?retryWrites=true&w=majority');\n      const db = client.db();\n      const meetupsCollection = db.collection('meetups');\n      const result = await meetupsCollection.insertOne(data);\n      console.log(result);\n      client.close();\n      res.status(201).json({\n        message: 'Meetup inserted!'\n      });\n    } catch (err) {\n      console.log('Error', err);\n      res.status(500).json({\n        message: 'Error adding meetup.'\n      });\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["C:/Users/jordan.kimsey/OneDrive - Accenture/Desktop/code/next-meetup-app/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message","err"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B;AACA,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,YAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,oGADmB,CAArB;AAGA,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,YAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,YAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BR,IAA5B,CAArB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAL,MAAAA,MAAM,CAACS,KAAP;AAEAb,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAE;AAAV,OAArB;AACD,KAZD,CAYE,OAAOC,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,GAArB;AACAjB,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAE;AAAV,OAArB;AACD;AACF;AACF;;AAED,eAAelB,OAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\n//API routes folder defines functions that contain server side code\r\n//next takes this folder and creates apis for us to use\r\n//never exposed to client all on server\r\n//these api request are triggered anytime a request is sent to that route\r\n\r\n//path of file, usually called handler\r\n///api/new-meetup\r\n\r\nasync function handler(req, res) {\r\n  //ensure only POST request to /api/new-meetup is triggered\r\n  if (req.method === 'POST') {\r\n    try {\r\n      const data = req.body;\r\n      const client = await MongoClient.connect(\r\n        'mongodb+srv://jordan1234:jordan1234@cluster0.otme2.mongodb.net/meetups?retryWrites=true&w=majority'\r\n      );\r\n      const db = client.db();\r\n      const meetupsCollection = db.collection('meetups');\r\n      const result = await meetupsCollection.insertOne(data);\r\n      console.log(result);\r\n      client.close();\r\n\r\n      res.status(201).json({message: 'Meetup inserted!'});\r\n    } catch (err) {\r\n      console.log('Error', err);\r\n      res.status(500).json({message: 'Error adding meetup.'})\r\n    }\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}