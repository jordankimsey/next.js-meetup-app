{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse from a huge list of meetups happening soon!\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n} //pros\n//excutes first during build process, not excute on client side\n//allows us to remove useeffect and usestate\n// sets props then return everything, great for SEO to have everything loaded into app\n//fetch data from an API or read files from filesystem\n//must return object and usually set props properity\n//optional for what we call inside props object\n//can only be called in pages\n//cons\n//could be outdated data, generated during build process\n//if we have more meetups then we wouldnt see new ones created\n//solution\n//we can pass in revalidate to rebuild site to fetch current data every __ seconds on server\n//faster allows for caching on cdn instead of regenerating everytime\n//this code isnt run on client so we can write server code here to call our own api without having to fetch outside\n\n\nexport var __N_SSG = true;\nexport default HomePage; //Alternative to getStaticProps(), not best choice in this case\n//does not run during build process but instead always on server after deployment\n//runs for every request\n//ideal if you need access to req, res and data updates multiple times per second\n// export async function getServerSideProps(context) {\n//   //optional prop accessible called context\n//   //have access to req and res of requests that can be used for the server side props or auth and cookies\n//   //dont return res object but props object instead\n//   const req = context.req;\n//   const res = context.res;\n//   //fetch data from API or filesystem\n//   //only runs on server\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n// const DUMMY_MEETUPS = [\n//   {\n//     id: 'm1',\n//     title: 'First meetup',\n//     image:\n//       'https://images.unsplash.com/photo-1522083165195-3424ed129620?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=997&q=80',\n//     address: '12345 Brooklyn st New York, New York',\n//     description: 'This is our first meet up',\n//   },\n//   {\n//     id: 'm2',\n//     title: 'Second meetup',\n//     image:\n//       'https://images.unsplash.com/photo-1517209806898-2be0a0caf519?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=997&q=80',\n//     address: '12345 Brooklyn st New York, New York',\n//     description: 'This is our second meet up',\n//   },\n// ];","map":null,"metadata":{},"sourceType":"module"}