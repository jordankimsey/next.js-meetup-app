{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jordan.kimsey\\\\OneDrive - Accenture\\\\Desktop\\\\code\\\\next-meetup-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} //must add getStaticPaths if using getStaticProps inside page component file if its dynamic \n//not needed if using getServerSideProps\n//next needs to know to prebuild all pages with the supported id because its dynamic\n//if user enters id thats not pre generated user will see 404 error\n\n\nexport async function getStaticPaths() {\n  return {\n    //must include fallback key that tells next if it include all values or just some of them\n    fallback: false,\n    //must fetch and return all possible ids\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  //cannot use useRouter to access meetupid to fetch\n  //can use context prop and have access to params which holds property that we defined to have meetupID on\n  const meetupId = context.params.meetupId; //fetch data for single meetup\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: 'm1',\n        image: 'https://images.unsplash.com/photo-1517209806898-2be0a0caf519?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80',\n        title: 'First Meet up',\n        address: '2521 Brooklyn St New York, NY',\n        description: 'This is the first meet up.'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/jordan.kimsey/OneDrive - Accenture/Desktop/code/next-meetup-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","console","log","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,C,CAED;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACL;AACAC,IAAAA,QAAQ,EAAE,KAFL;AAGL;AACAC,IAAAA,KAAK,EAAE,CACL;AAACC,MAAAA,MAAM,EAAE;AACPC,QAAAA,QAAQ,EAAE;AADH;AAAT,KADK;AAJF,GAAP;AAUD;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA;AACA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC,CAH4C,CAI5C;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVc,QAAAA,EAAE,EAAE,IADM;AAEVb,QAAAA,KAAK,EACH,gKAHQ;AAIVC,QAAAA,KAAK,EAAE,eAJG;AAKVC,QAAAA,OAAO,EAAE,+BALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAeN,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <>\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n//must add getStaticPaths if using getStaticProps inside page component file if its dynamic \r\n//not needed if using getServerSideProps\r\n//next needs to know to prebuild all pages with the supported id because its dynamic\r\n//if user enters id thats not pre generated user will see 404 error\r\nexport async function getStaticPaths() {\r\n  return {\r\n    //must include fallback key that tells next if it include all values or just some of them\r\n    fallback: false,\r\n    //must fetch and return all possible ids\r\n    paths: [\r\n      {params: {\r\n        meetupId: 'm1',\r\n      }}\r\n    ]\r\n  }\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n  //cannot use useRouter to access meetupid to fetch\r\n  //can use context prop and have access to params which holds property that we defined to have meetupID on\r\n  const meetupId = context.params.meetupId;\r\n  //fetch data for single meetup\r\n  console.log(meetupId)\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: 'm1',\r\n        image:\r\n          'https://images.unsplash.com/photo-1517209806898-2be0a0caf519?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1074&q=80',\r\n        title: 'First Meet up',\r\n        address: '2521 Brooklyn St New York, NY',\r\n        description: 'This is the first meet up.',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}