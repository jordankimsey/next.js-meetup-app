{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jordan.kimsey\\\\OneDrive - Accenture\\\\Desktop\\\\code\\\\next-meetup-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport Head from 'next/head';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n\n_c = MeetupDetails;\n; //must add getStaticPaths if using getStaticProps inside page component file if its dynamic \n//not needed if using getServerSideProps\n//next needs to know to prebuild all pages with the supported id because its dynamic\n//if user enters id thats not pre generated user will see 404 error\n\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/jordan.kimsey/OneDrive - Accenture/Desktop/code/next-meetup-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","Head","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACI,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;KATQN,a;AASR,C,CAED;AACA;AACA;AACA;;;AA6CA,eAAeA,aAAf","sourcesContent":["import {MongoClient, ObjectId} from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport Head from 'next/head'\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n  );\r\n};\r\n\r\n//must add getStaticPaths if using getStaticProps inside page component file if its dynamic \r\n//not needed if using getServerSideProps\r\n//next needs to know to prebuild all pages with the supported id because its dynamic\r\n//if user enters id thats not pre generated user will see 404 error\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://jordan1234:jordan1234@cluster0.otme2.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n  client.close();\r\n  return {\r\n    //must include fallback key that tells next if it include all values or just some of them\r\n    fallback: false,\r\n    //must fetch and return all possible ids\r\n    paths: meetups.map((meetup) => ({\r\n      params: {meetupId: meetup._id.toString()},\r\n    })),     \r\n  };\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n  //cannot use useRouter to access meetupid to fetch\r\n  //can use context prop and have access to params which holds property that we defined to have meetupID on\r\n  const meetupId = context.params.meetupId;\r\n  //fetch data for single meetup using above meetupId\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://jordan1234:jordan1234@cluster0.otme2.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}